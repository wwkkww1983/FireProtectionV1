// <auto-generated />
using System;
using FireProtectionV1.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FireProtectionV1.Migrations
{
    [DbContext(typeof(FireProtectionV1DbContext))]
    [Migration("20191219085006_1219.3")]
    partial class _12193
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.1-servicing-10028")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("FireProtectionV1.Enterprise.Model.EquipmentNo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("EquiNo")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("FireSystemId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("EquipmentNo");
                });

            modelBuilder.Entity("FireProtectionV1.Enterprise.Model.FireDept", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AreaId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FireDept");
                });

            modelBuilder.Entity("FireProtectionV1.Enterprise.Model.FireSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("SystemName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("FireSystem");
                });

            modelBuilder.Entity("FireProtectionV1.Enterprise.Model.FireUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(200);

                    b.Property<int>("AreaId");

                    b.Property<string>("ContractName")
                        .HasMaxLength(50);

                    b.Property<string>("ContractPhone")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("FireDeptContractName");

                    b.Property<string>("FireDeptContractPhone");

                    b.Property<int>("FireDeptId");

                    b.Property<int>("FiremanNum");

                    b.Property<string>("InvitationCode")
                        .HasMaxLength(10);

                    b.Property<bool>("IsDeleted");

                    b.Property<decimal>("Lat")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("LegalPerson");

                    b.Property<string>("LegalPersonPhone");

                    b.Property<decimal>("Lng")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<byte>("Patrol");

                    b.Property<int>("SafeUnitId");

                    b.Property<int>("TypeId");

                    b.Property<int>("WorkerNum");

                    b.Property<string>("ZP_Picture");

                    b.HasKey("Id");

                    b.ToTable("FireUnit");
                });

            modelBuilder.Entity("FireProtectionV1.Enterprise.Model.FireUnitArchitecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AboveNum");

                    b.Property<decimal>("Area");

                    b.Property<int>("BelowNum");

                    b.Property<int>("BuildYear");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("FireDevice_FHJL_Detail");

                    b.Property<bool>("FireDevice_FHJL_Exist");

                    b.Property<string>("FireDevice_FHM_Detail");

                    b.Property<bool>("FireDevice_FHM_Exist");

                    b.Property<string>("FireDevice_HJ_Detail");

                    b.Property<bool>("FireDevice_HJ_Exist");

                    b.Property<string>("FireDevice_LTJ_Detail");

                    b.Property<bool>("FireDevice_LTJ_Exist");

                    b.Property<string>("FireDevice_MHQ_Detail");

                    b.Property<bool>("FireDevice_MHQ_Exist");

                    b.Property<string>("FireDevice_MH_Detail");

                    b.Property<bool>("FireDevice_MH_Exist");

                    b.Property<string>("FireDevice_SSZS_Detail");

                    b.Property<bool>("FireDevice_SSZS_Exist");

                    b.Property<string>("FireDevice_TFPY_Detail");

                    b.Property<bool>("FireDevice_TFPY_Exist");

                    b.Property<string>("FireDevice_XFSY_Detail");

                    b.Property<bool>("FireDevice_XFSY_Exist");

                    b.Property<string>("FireDevice_XHS_Detail");

                    b.Property<bool>("FireDevice_XHS_Exist");

                    b.Property<string>("FireDevice_YJZM_Detail");

                    b.Property<bool>("FireDevice_YJZM_Exist");

                    b.Property<int>("FireUnitId");

                    b.Property<int>("FireUnitUserId");

                    b.Property<decimal>("Height");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Outward_Picture");

                    b.HasKey("Id");

                    b.ToTable("FireUnitArchitecture");
                });

            modelBuilder.Entity("FireProtectionV1.Enterprise.Model.FireUnitArchitectureFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ArchitectureId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("Floor_Picture");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("FireUnitArchitectureFloor");
                });

            modelBuilder.Entity("FireProtectionV1.Enterprise.Model.FireUnitAttention", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireDeptUserId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("FireUnitAttention");
                });

            modelBuilder.Entity("FireProtectionV1.Enterprise.Model.FireUnitPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("FirePlan");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("FireUnitPlan");
                });

            modelBuilder.Entity("FireProtectionV1.Enterprise.Model.FireUntiSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireSystemId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("FireUntiSystem");
                });

            modelBuilder.Entity("FireProtectionV1.Enterprise.Model.SafeUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContractName")
                        .HasMaxLength(50);

                    b.Property<string>("ContractPhone")
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("InvitationCode")
                        .HasMaxLength(10);

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Level");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("SafeUnit");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.AlarmToElectric", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Analog");

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireElectricDeviceId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Sign")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("AlarmToElectric");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.AlarmToFire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CheckContent")
                        .HasMaxLength(300);

                    b.Property<byte>("CheckState");

                    b.Property<DateTime?>("CheckTime");

                    b.Property<int>("CheckUserId");

                    b.Property<int>("CheckVoiceLength");

                    b.Property<string>("CheckVoiceUrl")
                        .HasMaxLength(100);

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireAlarmDetectorId");

                    b.Property<int>("FireAlarmDeviceId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("NotifyMiniStation");

                    b.Property<bool>("NotifyWorker");

                    b.HasKey("Id");

                    b.ToTable("AlarmToFire");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.BreakDown", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("DataId");

                    b.Property<DateTime>("DispatchTime");

                    b.Property<int>("DoUserId");

                    b.Property<int>("FireUnitId");

                    b.Property<int>("HandleStatus");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remark")
                        .HasMaxLength(200);

                    b.Property<DateTime>("SafeCompleteTime");

                    b.Property<DateTime>("SolutionTime");

                    b.Property<int>("SolutionWay");

                    b.Property<int>("Source");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("BreakDown");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.DataToDuty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("DutyPicture")
                        .HasMaxLength(100);

                    b.Property<string>("DutyRemark");

                    b.Property<byte>("DutyStatus");

                    b.Property<int>("FireUnitId");

                    b.Property<int>("FireUnitUserId");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("DataToDuty");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.DataToDutyProblem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("DutyId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ProblemRemark")
                        .HasMaxLength(200);

                    b.Property<int>("ProblemRemarkType");

                    b.Property<int>("VoiceLength");

                    b.HasKey("Id");

                    b.ToTable("DataToDutyProblem");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.DataToPatrol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireUnitId");

                    b.Property<int>("FireUnitUserId");

                    b.Property<bool>("IsDeleted");

                    b.Property<byte>("PatrolStatus");

                    b.HasKey("Id");

                    b.ToTable("DataToPatrol");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.DataToPatrolDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("DeviceSn")
                        .HasMaxLength(20);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PatrolAddress");

                    b.Property<int>("PatrolId");

                    b.Property<byte>("PatrolStatus");

                    b.Property<byte>("PatrolType");

                    b.HasKey("Id");

                    b.ToTable("DataToPatrolDetail");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.DataToPatrolDetailFireSystem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireSystemID");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("PatrolDetailId");

                    b.HasKey("Id");

                    b.ToTable("DataToPatrolDetailFireSystem");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.DataToPatrolDetailProblem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("PatrolDetailId");

                    b.Property<string>("ProblemRemark")
                        .HasMaxLength(500);

                    b.Property<byte>("ProblemRemarkType");

                    b.Property<int>("VoiceLength");

                    b.HasKey("Id");

                    b.ToTable("DataToPatrolDetailProblem");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.DetectorType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("ApplyForTSJ");

                    b.Property<DateTime>("CreationTime");

                    b.Property<byte>("GBType");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("DetectorType");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.Fault", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("FaultRemark");

                    b.Property<int>("FireAlarmDetectorId");

                    b.Property<int>("FireAlarmDeviceId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("Fault");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.FireAlarmDetector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("DetectorTypeId");

                    b.Property<int>("FaultNum");

                    b.Property<int>("FireAlarmDeviceId");

                    b.Property<int>("FireUnitArchitectureFloorId");

                    b.Property<int>("FireUnitId");

                    b.Property<string>("FullLocation");

                    b.Property<string>("Identify")
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("LastFaultId");

                    b.Property<string>("Location")
                        .HasMaxLength(100);

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("FireAlarmDetector");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.FireAlarmDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Brand");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("DeviceModel");

                    b.Property<string>("DeviceSn");

                    b.Property<bool>("EnableAlarmCloud");

                    b.Property<bool>("EnableAlarmSwitch");

                    b.Property<bool>("EnableFaultCloud");

                    b.Property<bool>("EnableFaultSwitch");

                    b.Property<int>("FireUnitArchitectureId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("NetComm");

                    b.Property<int>("NetDetectorNum");

                    b.Property<string>("Protocol");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("FireAlarmDevice");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.FireAlarmDeviceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("FireAlarmDeviceModel");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.FireAlarmDeviceProtocol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("FireAlarmDeviceProtocol");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.FireElectricDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("DataRate");

                    b.Property<string>("DeviceModel")
                        .HasMaxLength(20);

                    b.Property<string>("DeviceSn")
                        .HasMaxLength(20);

                    b.Property<bool>("EnableAlarmSwitch");

                    b.Property<bool>("EnableCloudAlarm");

                    b.Property<bool>("EnableEndAlarm");

                    b.Property<bool>("ExistAmpere");

                    b.Property<bool>("ExistTemperature");

                    b.Property<int>("FireUnitArchitectureFloorId");

                    b.Property<int>("FireUnitArchitectureId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location")
                        .HasMaxLength(100);

                    b.Property<int>("MaxAmpere");

                    b.Property<int>("MaxL");

                    b.Property<int>("MaxL1");

                    b.Property<int>("MaxL2");

                    b.Property<int>("MaxL3");

                    b.Property<int>("MaxN");

                    b.Property<int>("MinAmpere");

                    b.Property<int>("MinL");

                    b.Property<int>("MinL1");

                    b.Property<int>("MinL2");

                    b.Property<int>("MinL3");

                    b.Property<int>("MinN");

                    b.Property<string>("NetComm");

                    b.Property<int>("PhaseType");

                    b.Property<int>("State");

                    b.HasKey("Id");

                    b.ToTable("FireElectricDevice");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.FireElectricDeviceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("FireElectricDeviceModel");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.FireElectricRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Analog");

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireElectricDeviceId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Sign");

                    b.HasKey("Id");

                    b.ToTable("FireElectricRecord");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.FireOrtherDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("DeviceName");

                    b.Property<string>("DeviceSn");

                    b.Property<string>("DeviceType");

                    b.Property<DateTime>("ExpireTime");

                    b.Property<int>("FireSystemId");

                    b.Property<int>("FireUnitArchitectureFloorId");

                    b.Property<int>("FireUnitArchitectureId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("StartTime");

                    b.HasKey("Id");

                    b.ToTable("FireOrtherDevice");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.FireWaterDevice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("CurrentValue");

                    b.Property<string>("DeviceAddress");

                    b.Property<bool>("EnableCloudAlarm");

                    b.Property<int>("FireUnitId");

                    b.Property<string>("Gateway_DataRate");

                    b.Property<string>("Gateway_Location");

                    b.Property<string>("Gateway_NetComm");

                    b.Property<string>("Gateway_Sn");

                    b.Property<string>("Gateway_Type");

                    b.Property<string>("HeightThreshold");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Location");

                    b.Property<int>("MonitorType");

                    b.Property<string>("PressThreshold");

                    b.Property<string>("State");

                    b.HasKey("Id");

                    b.ToTable("FireWaterDevice");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.FireWaterDeviceType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("FireWaterDeviceType");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.PhotosPathSave", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("DataId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("PhotoPath")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("PhotosPathSave");
                });

            modelBuilder.Entity("FireProtectionV1.FireWorking.Model.RecordOnline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("DetectorId");

                    b.Property<bool>("IsDeleted");

                    b.Property<sbyte>("State");

                    b.HasKey("Id");

                    b.ToTable("RecordOnline");
                });

            modelBuilder.Entity("FireProtectionV1.HydrantCore.Model.Hydrant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<int>("AreaId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<decimal>("DumpEnergy");

                    b.Property<bool>("IsDeleted");

                    b.Property<decimal>("Lat")
                        .HasColumnType("decimal(9,6)");

                    b.Property<decimal>("Lng")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Sn")
                        .IsRequired();

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("Hydrant");
                });

            modelBuilder.Entity("FireProtectionV1.HydrantCore.Model.HydrantAlarm", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<byte>("HandleStatus");

                    b.Property<string>("HandleUser");

                    b.Property<int>("HydrantId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("ProblemRemark")
                        .HasMaxLength(200);

                    b.Property<byte>("ProblemRemarkType");

                    b.Property<bool>("ReadFlag");

                    b.Property<DateTime>("SoultionTime");

                    b.Property<string>("Title");

                    b.Property<int>("VoiceLength");

                    b.HasKey("Id");

                    b.ToTable("HydrantAlarm");
                });

            modelBuilder.Entity("FireProtectionV1.HydrantCore.Model.HydrantPressure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("HydrantId");

                    b.Property<bool>("IsDeleted");

                    b.Property<double>("Pressure");

                    b.HasKey("Id");

                    b.ToTable("HydrantPressure");
                });

            modelBuilder.Entity("FireProtectionV1.Infrastructure.Model.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<string>("AreaPath")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<byte>("Grade");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("ParentId");

                    b.HasKey("Id");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("FireProtectionV1.Infrastructure.Model.FireUnitType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("FireUnitType");
                });

            modelBuilder.Entity("FireProtectionV1.MiniFireStationCore.Model.MiniFireAction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(100);

                    b.Property<string>("AttendUser");

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("MiniFireActionTypeId");

                    b.Property<int>("MiniFireStationId");

                    b.Property<string>("Problem");

                    b.HasKey("Id");

                    b.ToTable("MiniFireAction");
                });

            modelBuilder.Entity("FireProtectionV1.MiniFireStationCore.Model.MiniFireActionType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Type");

                    b.HasKey("Id");

                    b.ToTable("MiniFireActionType");
                });

            modelBuilder.Entity("FireProtectionV1.MiniFireStationCore.Model.MiniFireEquipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Count");

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("DefineId");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("MiniFireStationId");

                    b.HasKey("Id");

                    b.ToTable("MiniFireEquipment");
                });

            modelBuilder.Entity("FireProtectionV1.MiniFireStationCore.Model.MiniFireEquipmentDefine", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Type")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("MiniFireEquipmentDefine");
                });

            modelBuilder.Entity("FireProtectionV1.MiniFireStationCore.Model.MiniFireStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .HasMaxLength(50);

                    b.Property<string>("ContactName")
                        .HasMaxLength(20);

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(11);

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.Property<decimal>("Lat")
                        .HasColumnType("decimal(9,6)");

                    b.Property<int>("Level");

                    b.Property<decimal>("Lng")
                        .HasColumnType("decimal(9,6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<int>("PersonNum");

                    b.Property<string>("PhotoBase64");

                    b.Property<int>("StationUserId");

                    b.HasKey("Id");

                    b.ToTable("MiniFireStation");
                });

            modelBuilder.Entity("FireProtectionV1.MiniFireStationCore.Model.MiniFireStationJobUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ContactName")
                        .HasMaxLength(20);

                    b.Property<string>("ContactPhone")
                        .HasMaxLength(11);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("HeadPhotoBase64");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Job")
                        .HasMaxLength(10);

                    b.Property<int>("MiniFireStationId");

                    b.HasKey("Id");

                    b.ToTable("MiniFireStationJobUser");
                });

            modelBuilder.Entity("FireProtectionV1.SettingCore.Model.FireSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<double>("MaxValue");

                    b.Property<double>("MinValue");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("FireSetting");
                });

            modelBuilder.Entity("FireProtectionV1.StreetGridCore.Model.StreetGridEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("EventType");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Status");

                    b.Property<int>("StreetGridUserId");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("StreetGridEvent");
                });

            modelBuilder.Entity("FireProtectionV1.StreetGridCore.Model.StreetGridEventRemark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remark");

                    b.Property<int>("StreetGridEventId");

                    b.HasKey("Id");

                    b.ToTable("StreetGridEventRemark");
                });

            modelBuilder.Entity("FireProtectionV1.StreetGridCore.Model.StreetGridUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Community");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("GridName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasMaxLength(20);

                    b.Property<string>("Street")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("StreetGridUser");
                });

            modelBuilder.Entity("FireProtectionV1.SupervisionCore.Model.Supervision", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CheckResult");

                    b.Property<string>("CheckUser");

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("DocumentDeadline");

                    b.Property<int>("DocumentInspection");

                    b.Property<int>("DocumentMajor");

                    b.Property<int>("DocumentPunish");

                    b.Property<int>("DocumentReview");

                    b.Property<int>("DocumentSite");

                    b.Property<int>("FireDeptUserId");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remark");

                    b.HasKey("Id");

                    b.ToTable("Supervision");
                });

            modelBuilder.Entity("FireProtectionV1.SupervisionCore.Model.SupervisionDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<bool>("IsOK");

                    b.Property<int>("SupervisionId");

                    b.Property<int>("SupervisionItemId");

                    b.HasKey("Id");

                    b.ToTable("SupervisionDetail");
                });

            modelBuilder.Entity("FireProtectionV1.SupervisionCore.Model.SupervisionDetailRemark", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Remark");

                    b.Property<int>("SupervisionDetailId");

                    b.HasKey("Id");

                    b.ToTable("SupervisionDetailRemark");
                });

            modelBuilder.Entity("FireProtectionV1.SupervisionCore.Model.SupervisionItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<int>("ParentId");

                    b.HasKey("Id");

                    b.ToTable("SupervisionItem");
                });

            modelBuilder.Entity("FireProtectionV1.SupervisionCore.Model.SupervisionPhotos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name");

                    b.Property<string>("Path");

                    b.Property<int>("SupervisionId");

                    b.HasKey("Id");

                    b.ToTable("SupervisionPhotos");
                });

            modelBuilder.Entity("FireProtectionV1.User.Model.FireDeptUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireDeptId");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("FireDeptUser");
                });

            modelBuilder.Entity("FireProtectionV1.User.Model.FireUnitUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireUnitInfoID");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Photo");

                    b.Property<string>("Qualification");

                    b.Property<string>("QualificationNumber");

                    b.Property<DateTime>("QualificationValidity");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.ToTable("FireUnitUser");
                });

            modelBuilder.Entity("FireProtectionV1.User.Model.FireUnitUserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountID");

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("Role");

                    b.HasKey("Id");

                    b.ToTable("FireUnitUserRole");
                });

            modelBuilder.Entity("FireProtectionV1.User.Model.HydrantUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("GuideFlage");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("HydrantUser");
                });

            modelBuilder.Entity("FireProtectionV1.User.Model.HydrantUserArea", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountID");

                    b.Property<int>("AreaID");

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.HasKey("Id");

                    b.ToTable("HydrantUserArea");
                });

            modelBuilder.Entity("FireProtectionV1.User.Model.SafeUnitUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Account")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("SafeUnitId");

                    b.HasKey("Id");

                    b.ToTable("SafeUnitUser");
                });

            modelBuilder.Entity("FireProtectionV1.User.Model.SafeUnitUserFireUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<int>("FireUnitId");

                    b.Property<bool>("IsDeleted");

                    b.Property<int>("SafeUnitUserId");

                    b.HasKey("Id");

                    b.ToTable("SafeUnitUserFireUnit");
                });

            modelBuilder.Entity("FireProtectionV1.VersionCore.Model.AppVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AppPath");

                    b.Property<byte>("AppType");

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("VersionNo");

                    b.HasKey("Id");

                    b.ToTable("AppVersion");
                });

            modelBuilder.Entity("FireProtectionV1.VersionCore.Model.Suggest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreationTime");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("suggest");

                    b.HasKey("Id");

                    b.ToTable("Suggest");
                });
#pragma warning restore 612, 618
        }
    }
}
